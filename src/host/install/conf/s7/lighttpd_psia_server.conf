var.psia_basedir = env.STRETCH_SERVER_HOME
var.lighty_logdirs = "/var/log/lighttpd"

server.document-root = psia_basedir + "/html"
server.errorlog      = lighty_logdirs + "/lighttpd.error.log"
accesslog.filename   = lighty_logdirs + "/lighttpd.access.log"

socket_dir = "/tmp/"
server.port = 80
server.username = "www-data"
server.groupname = "www-data"
#server.bind = "127.0.0.1"
#"192.168.1.32"
#socket_dir + "lighttpd.socket"
server.tag ="www-data"
server.reject-expect-100-with-417 = "disable"

# According to lighty documentation mod_auth must be
# before mod_fastcgi, or else users will will experience
#long delays when login.
server.modules              = (
            "mod_access",
            "mod_accesslog",
            "mod_auth",
            "mod_fastcgi",
            "mod_rewrite",
            "mod_cgi"
)

######################  Authentication ####################
# see http://redmine.lighttpd.net/wiki/1/Docs:ModAuth for
# more information.

# 0 for off, 1 for 'auth-ok' messages, 2 for verbose debugging
auth.debug = 2

## type of backend
# plain, htpasswd, ldap or htdigest
auth.backend = "plain"

# The lighty plain password contains user name and the clear
# password separated by a colon. Each entry is terminated by
# a single new line ('\r').

# Example of lighty password file has the following format:
#      admin:security

#  This file must be initialized with:
#  admin:<no password>

# filename of the password storage for plain
auth.backend.plain.userfile = psia_basedir + "/conf/st_passwords.lighty"

## for htpasswd
#auth.backend.htpasswd.userfile = psia_basedir + "/conf/st_htpasswords.lighty"

## for htdigest
#auth.backend.htdigest.userfile = psia_basedir + "/conf/st_htdigest.lighty"


## restrictions
# set restrictions:
#
# ( <left-part-of-the-url> =>
#   ( "method" => "digest"/"basic",
#     "realm" => <realm>,
#     "require" => "user=<username>" )
# )
#
# <realm> is a string to display in the dialog
#         presented to the user and is also used for the
#         digest-algorithm and has to match the realm in the
#         htdigest file (if used)
#
#auth.require = ( "/PSIA" =>
auth.require = ("/junk" =>
    (
        # method must be either basic or digest
        "method" => "basic",
        "realm" => "PSIA",
         # "valid-user" means any user
         # "user=<name>" means specific user
        "require" => "valid-user"
    )
)


#################### Fast CGI Section ######################
fastcgi.server = (

    "/PSIA" => (
      "PSIA.fastcgi.handler" => (
        "socket" => socket_dir + "psia.fastcgi.socket",
        "check-local" => "disable",
        "bin-path" => psia_basedir + "/bin/psia_server",
        "min-procs" => 1,
        "max-procs" => 1,
        "idle-timeout" => 60
      )
    )

)

# mimetype mapping
mimetype.assign             = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "audio/x-wav",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar"
 )
index-file.names = ( "index.html", "index.php" )

